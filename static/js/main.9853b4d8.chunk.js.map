{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAY,uDAAjB,cACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IADN,IAEC,4BAAIC,WCcOK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEUA,EAAOC,KAAI,SAACC,EAAKC,GACzB,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMKC,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAa,eACbC,SAAYH,OCADI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YCiBKC,G,wDAnBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAW,GAHM,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAS,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,yDAEDG,KAAKX,MAAMK,a,GAhBOQ,cCkDZC,E,kDA1Cd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAO,CACXlB,OAAQ,GACRK,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OAClByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAOvC,WACC,MAA+BZ,KAAKJ,MAA5BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAApC,GACpC,OAAOA,EAAOP,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAEvD,OAAsB,IAAlBrC,EAAOuC,OACH,yCAGN,sBAAK3C,UAAU,KAAf,UACC,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWU,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAQmC,e,GAjCPX,aCGHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCIdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.9853b4d8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {    /*เป็นการ Destruc สามารถดูได้จาก ES6*/\r\n\treturn (\r\n\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 '> {/*techyons css class*/}\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2> {/* ที่ต้อง {} เพราะเป็น JS expression*/}\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {   /* {robots} = props ของ ClassList ดูใน index.js*/\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n            robots.map((user,i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\tkey={i} \r\n\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t); \r\n\t\t\t})\r\n\t\t}\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder ='search robot'\r\n\t\t\t\tonChange = {searchChange}\r\n\t\t\t />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import\tReact from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError : false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({ hasError:true})\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Ooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;\r\n\r\n","import React, { Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state ={\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){ //ในbuilding React App4\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value}) /*เวลาจะเปลี่ยนค่า State ต้องใช้แบบนี้*/\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst  {robots, searchfield} = this.state\r\n\t\tconst filteredRobots = robots.filter(robots => {\r\n\t\t\treturn robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif (robots.length === 0) {\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className ='f1'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\t\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card'; //import Component Card ใน Build 2 ย่อไปใส่ใน CardList \n//import CardList from './CardList'; //import Component CardListCard\nimport App from './containers/App'; //ใน Build 3 จะสร้าง Big component -> App ที่มี CardList เป็น children\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import { robots } from './robots';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}